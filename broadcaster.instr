DEFINE INSTRUMENT SimpleBroadcaster()
DECLARE
%{
int cassette;
int analyzer;
%}
USERVARS %{
double charge_A;
double charge_B;
int RING;
int FEN;
int TUBE;
%}
INITIALIZE
%{

%}
TRACE

COMPONENT Origin = Progress_bar() AT (0,0,0) ABSOLUTE EXTEND
%{
  cassette = (int)rand01()*9;
  analyzer = (int)rand01()*5;
%}

COMPONENT Source = Source_simple(yheight = 0.1, xwidth = 0.1, dist = 1, focus_xw=0.1, focus_yh=0.1, E0=5, dE=4)
AT (0,0,0) RELATIVE Origin ROTATED (0,0,0) RELATIVE Origin

COMPONENT Detector = PSD_monitor(nx=100, ny=100, filename="psd.dat", xwidth=0.1, yheight=0.1)
AT (0,0,1) RELATIVE Source ROTATED (0,0,0) RELATIVE Source
EXTEND %{
if (SCATTERED) {
  RING = analyzer / 3; // triplet//3;
  TUBE = 3 * cassette + (analyzer - 3 * RING); // 3*arc + triplet%3;
  FEN = 1; // always 1 for BIFROST
  charge_A = rand01() * 255.0;
  charge_B = rand01() * 255.0;
  printf("(%d, %d, %d) %7.3f %7.3f\n", RING, FEN, TUBE, charge_A, charge_B);
}
%}

COMPONENT broadcast = Event_broadcaster(id0="RING", id1="FEN", id2="TUBE", double0="charge_A", double1="charge_B")
// None of the AT ... matters as the broadcaster accepts all events which have made it this far throug the instrument.
AT(0,0,0.01) RELATIVE Detector ROTATED(0,0,0) RELATIVE Detector

FINALLY
%{
%}
END
